#!/bin/bash

echo "üîß Diagnosticando problema 404 do GMapExtractor..."

# 1. Verificar se o backend est√° rodando
echo "1Ô∏è‚É£ Verificando se o backend est√° rodando..."
if ! curl -s http://localhost:5000/health > /dev/null; then
    echo "‚ùå Backend n√£o est√° rodando"
    echo "Execute: cd backend && npm run dev"
    exit 1
fi
echo "‚úÖ Backend est√° rodando"

# 2. Verificar se o arquivo de rota existe
echo "2Ô∏è‚É£ Verificando arquivo de rota..."
if [ ! -f "backend/src/routes/gmaps-extractor.ts" ]; then
    echo "‚ùå Arquivo gmaps-extractor.ts n√£o encontrado"
    exit 1
fi
echo "‚úÖ Arquivo de rota existe"

# 3. Testar compila√ß√£o TypeScript
echo "3Ô∏è‚É£ Testando compila√ß√£o..."
cd backend
npx tsc --noEmit src/routes/gmaps-extractor.ts || {
    echo "‚ùå Erro de compila√ß√£o TypeScript"
    exit 1
}
echo "‚úÖ Compila√ß√£o OK"

# 4. Verificar se as depend√™ncias est√£o instaladas
echo "4Ô∏è‚É£ Verificando depend√™ncias..."
npm list puppeteer > /dev/null || {
    echo "‚ùå Puppeteer n√£o instalado"
    npm install puppeteer
}

npm list exceljs > /dev/null || {
    echo "‚ùå ExcelJS n√£o instalado"
    npm install exceljs
}

npm list @types/puppeteer > /dev/null || {
    echo "‚ùå Tipos do Puppeteer n√£o instalados"
    npm install --save-dev @types/puppeteer
}

echo "‚úÖ Depend√™ncias OK"

# 5. Verificar tabelas do banco
echo "5Ô∏è‚É£ Verificando tabelas do banco..."
cd ..
chmod +x scripts/check-gmaps-tables.sh
./scripts/check-gmaps-tables.sh

# 6. Testar rota diretamente
echo "6Ô∏è‚É£ Testando rota..."
curl -s -X GET http://localhost:5000/api/gmaps-extractor/campaigns \
  -H "Authorization: Bearer test-token" \
  -H "Content-Type: application/json" || echo "‚ùå Rota n√£o responde"

echo "‚úÖ Diagn√≥stico conclu√≠do"
echo "Reinicie o backend: cd backend && npm run dev"
